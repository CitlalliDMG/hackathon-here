{"version":3,"sources":["session/AuthUserContext.js","constants/routes.js","firebase/firebase.js","firebase/auth.js","components/SignOut/SignOut.js","components/Navigation/Navigation.js","components/Landing/Landing.js","components/SignIn/SignIn.js","components/PasswordForget/PasswordForget.js","session/withAuthorization.js","components/Home/Map.js","components/Home/Home.js","components/Page404/Page404.js","components/App.js","session/withAuthentication.js","serviceWorker.js","index.js"],"names":["AuthUserContext","createContext","HOME","firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","auth","doSignInWithEmailAndPassword","email","password","signInWithEmailAndPassword","doSignOut","console","log","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","SignOutButton","react_default","a","createElement","type","onClick","NavigationAuth","className","href","process","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Link","to","routes","SignOut","NavigationNonAuth","Navigation","session_AuthUserContext","Consumer","authUser","Navigation_NavigationAuth","Navigation_NavigationNonAuth","LandingPage","byPropKey","propertyName","value","Object","defineProperty","INITIAL_STATE","error","SignInForm","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSubmit","event","preventDefault","_this$state","state","history","then","setState","objectSpread","push","catch","_this2","_this$state2","isInvalid","onChange","target","placeholder","disabled","message","Component","withRouter","_ref","SignIn_SignInForm","PasswordForgetForm","PasswordForgetPage","PasswordForget_PasswordForgetForm","withAuthorization","authCondition","ComponentToRender","WithAuthorization","_Component","apply","arguments","inherits","createClass","key","onAuthStateChanged","Map","url","points","src","concat","app_id","app_code","app_coord","app_zoom","alt","HomePage","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","Home_Map","Page404Page","withAuthentication","WithAuthentication","Provider","BrowserRouter","basename","react","components_Navigation_Navigation","Switch","Route","exact","path","component","SignInPage","Page404","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8cd829c6.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst AuthUserContext = createContext(null);\n\nexport default AuthUserContext;\n","\nexport const SIGN_IN = '/signin';\nexport const LANDING = '/';\nexport const HOME = '/home';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const PAGE404 = '/not-found-404';\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyDwUHqyEz3Xt8hPFLM3yflFtfJXaBFzDw0\",\n  authDomain: \"hackathon-here-86d54.firebaseapp.com\",\n  databaseURL: \"https://hackathon-here-86d54.firebaseio.com\",\n  projectId: \"hackathon-here-86d54\",\n  storageBucket: \"hackathon-here-86d54.appspot.com\",\n  messagingSenderId: \"219832925319\"\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(config);\n}\n\nconst auth = firebase.auth();\n\nexport { auth };\n","import { auth } from './firebase';\n\n// Sign In\nexport const doSignInWithEmailAndPassword = (email, password) =>\n  auth.signInWithEmailAndPassword(email,password);\n\n// Sign Out\nexport const doSignOut = () =>{\n  console.log('Adios');\n  auth.signOut();\n}\n\n// Password Reset\nexport const doPasswordReset = (email) =>\n  auth.sendPasswordResetEmail(email);\n\n// Password Change\nexport const doPasswordUpdate = (password) =>\n  auth.currentUser.updatePassword(password);\n","import React from 'react';\n\nimport { auth } from '../../firebase';\n\nconst SignOutButton = () =>\n  <button\n    type=\"button\"\n    onClick={auth.doSignOut}\n  >\n    Cerrar sesión\n  </button>\n\nexport default SignOutButton;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport AuthUserContext from '../../session/AuthUserContext';\nimport * as routes from \"../../constants/routes\";\nimport SignOutButton from \"../SignOut/SignOut\";\n\nconst Navigation = () =>\n  <AuthUserContext.Consumer>\n      { authUser => authUser\n        ? <NavigationAuth />\n        : <NavigationNonAuth />\n      }\n  </AuthUserContext.Consumer>\n\n\nconst NavigationAuth = () => \n  <nav className=\"navbar navbar-expand-lg navbar-light\">\n    <a className=\"navbar-brand\" href={process.env.PUBLIC_URL + routes.LANDING}>\n      Hackathon HERE\n    </a>\n    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul className=\"navbar-nav ml-auto\">\n        <li className=\"nav-item\">\n          <Link to={routes.HOME} className=\"nav-link\">Información</Link>\n        </li>\n          <SignOutButton className=\"nav-item\"/>\n      </ul>\n    </div>\n  </nav>\n\nconst NavigationNonAuth = () => \n  <nav className=\"navbar navbar-expand-lg navbar-light\">\n  <a className=\"navbar-brand\" href={process.env.PUBLIC_URL + routes.LANDING}>\n    Hackathon HERE\n  </a>\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span className=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul className=\"navbar-nav ml-auto\">\n      <li className=\"nav-item  mr-3\">\n        <Link to={routes.LANDING} className=\"nav-link\">Acerca de</Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link to={routes.SIGN_IN} className=\"nav-link\">Entrar</Link>\n      </li>\n    </ul>\n  </div>\n  </nav>\n\nexport default Navigation;\n","import React from 'react';\n\nconst LandingPage = () =>\n  <div>\n    <h1>Landing Page</h1>\n  </div>\n\nexport default LandingPage;","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { auth } from \"../../firebase\";\nimport * as routes from \"../../constants/routes\";\n\nconst SignInPage = ({ history }) => (\n  <div>\n    <h1>Ingresa a tu cuenta</h1>\n    <SignInForm history={history} />\n  </div>\n);\n\nconst byPropKey = (propertyName, value) => () => ({\n  [propertyName]: value\n});\n\nconst INITIAL_STATE = {\n  email: \"\",\n  password: \"\",\n  error: null\n};\n\nclass SignInForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    event.preventDefault();\n\n    const { email, password } = this.state;\n\n    const { history } = this.props;\n\n    auth\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        history.push(routes.HOME);\n      })\n      .catch(error => {\n        this.setState(byPropKey(\"error\", error));\n      });\n  };\n  render() {\n    const { email, password, error } = this.state;\n\n    const isInvalid = password === \"\" || email === \"\";\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          value={email}\n          onChange={event =>\n            this.setState(byPropKey(\"email\", event.target.value))\n          }\n          type=\"email\"\n          placeholder=\"Correo electrónico\"\n        />\n        <input\n          value={password}\n          onChange={event =>\n            this.setState(byPropKey(\"password\", event.target.value))\n          }\n          type=\"password\"\n          placeholder=\"Contraseña\"\n        />\n        <button \n            disabled={isInvalid}\n            type=\"submit\"\n        >\n          Entrar\n        </button>\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withRouter(SignInPage);\n\nexport { SignInForm };","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { auth } from '../../firebase';\nimport * as routes from '../../constants/routes';\n\nconst PasswordForgetPage = () =>\n  <div className=\"center container col-8\">\n    <h1 className=\"mb-3\">¿Olvidaste tu contraseña?</h1>\n    <p>Ingresa tu correo electrónico y recibe un email con las instrucciones para restablecerla</p>\n    <PasswordForgetForm />\n  </div>\n\nconst byPropKey = (propertyName, value) => () => ({\n  [propertyName]: value,\n});\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null,\n};\n\nclass PasswordForgetForm extends Component {\n    constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault();\n\n    const { email } = this.state;\n\n    auth.doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState(byPropKey('error', error));\n      });\n  }\n\n  render() {\n    const {\n      email,\n      error,\n    } = this.state;\n\n    const isInvalid = email === '';\n\n    return(\n      <form onSubmit={this.onSubmit}>\n        <input\n          value={this.state.email}\n          onChange={event => this.setState(byPropKey('email', event.target.value))}\n          type=\"email\"\n          placeholder=\"Correo electrónico\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Restablecer contraseña\n        </button>\n\n        { error && <p>{error.message}</p> }\n      </form>\n    );\n  }\n}\n\nconst PasswordForgetLink = () =>\n  <p>\n    <Link to={routes.PASSWORD_FORGET}>¿Olvidaste tu contraseña?</Link>\n  </p>\n\nexport default PasswordForgetPage;\n\nexport {\n  PasswordForgetForm,\n  PasswordForgetLink,\n}\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport AuthUserContext from './AuthUserContext';\nimport { firebase } from '../firebase';\nimport * as routes from '../constants/routes';\n\nconst withAuthorization = (authCondition) => (ComponentToRender) => {\n  class WithAuthorization extends Component {\n    componentDidMount() {\n      firebase.auth.onAuthStateChanged(authUser => {\n        if (!authCondition(authUser)) {\n          this.props.history.push(routes.LANDING);\n        }\n      });\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser => authUser\n            ? <ComponentToRender {...this.props}/>\n            : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return withRouter(WithAuthorization);\n}\n\nexport default withAuthorization;\n","import React, { Component } from 'react';\n\nclass Map extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            url: 'https://image.maps.api.here.com/mia/1.6/mapview?',\n            points: [],\n        }        \n    }\n\n    render() {         \n        return (\n            // console.log(this.props.app_coord)\n            <img\n                src={`${this.state.url}&app_id=${this.props.app_id}&app_code=${this.props.app_code}&c=${this.props.app_coord}&z=${this.props.app_zoom}`}\n                alt=\"mapa de ruta\"\n            />\n        );\n    }\n}\n \nexport default Map;","import React, { Component } from 'react';\n\nimport withAuthorization from '../../session/withAuthorization';\nimport Map from './Map';\nimport './Home.css';\n\nclass HomePage extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      // items: [],\n      // isLoaded: true,\n      value:'0,0',\n      error: null,\n    }\n  }\n\n  componentDidMount() {\n    if(navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          this.setState({\n            value: `${position.coords.latitude},${position.coords.longitude}`,\n            error: null,\n          });\n        },\n        (error) => this.setState(\n          {error: error.message}\n        )\n      );\n    }\n  }\n\n  render() {\n    return(\n      <Map app_id=\"GJI8ICf6LihEIAGbLTZb\" app_code=\"C-Z87J-qv8YxWSZ5ctQLSg\" app_coord={this.state.value} app_zoom=\"15\"/>\n    )\n    \n  }\n}\n\nconst authCondition  = (authUser) => !!authUser;\n\nexport default withAuthorization(authCondition)(HomePage);","import React from 'react';\n\nconst Page404Page = () =>\n  <div>\n    <h1>Page404 Page</h1>\n  </div>\n\nexport default Page404Page;","import React, { Fragment } from 'react';\nimport{ BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Navigation from './Navigation/Navigation';\nimport LandingPage from './Landing/Landing';\nimport SignInPage from './SignIn/SignIn';\nimport PasswordForgetPage from './PasswordForget/PasswordForget';\nimport HomePage from './Home/Home';\nimport Page404 from './Page404/Page404';\n\nimport * as routes from '../constants/routes';\nimport withAuthentication from '../session/withAuthentication';\n\nconst App = () => \n  <Router basename={process.env.PUBLIC_URL}>\n    <Fragment>\n      <Navigation/>\n      <Switch>\n        <Route exact path={routes.LANDING} component={LandingPage}/>\n        <Route exact path={routes.SIGN_IN} component={SignInPage}/>\n        <Route exact path={routes.PASSWORD_FORGET} component={PasswordForgetPage}/>\n        <Route exact path={routes.HOME} component={HomePage}/>\n        <Route component={Page404}/>\n      </Switch>\n    </Fragment>\n  </Router>\n\nexport default withAuthentication(App);\n","import React, { Component } from 'react';\n\nimport AuthUserContext from './AuthUserContext';\nimport { firebase } from '../firebase';\n\nconst withAuthentication = (ComponentToRender) => {\n  class WithAuthentication extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authUser:null,\n        };\n    }\n\n    componentDidMount() {\n        firebase.auth.onAuthStateChanged(authUser => {\n            authUser\n                ? this.setState({ authUser })\n                : this.setState({ authUser: null});\n        });\n    }\n\n    render() {\n        const { authUser } = this.state;\n      return (\n          <AuthUserContext.Provider value={authUser}>\n            <ComponentToRender {...this.props} />\n          </AuthUserContext.Provider>\n      );\n    }\n  }\n\n  return WithAuthentication;\n}\n\nexport default withAuthentication;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\n// eslint-disable-next-line\nimport $ from 'jquery';\n// eslint-disable-next-line\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}